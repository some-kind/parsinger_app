•	Далее, перейдя в среду разработки, установить все нужные для запуска модуля мониторинга используемых
услуг модули python. Это можно сделать при помощи команды

pip3 install -r requirements.txt


•	После установки всех необходимых модуль необходимо запустить его при помощи команды

python3 monitoring_module.py
•	В консоли появится адрес и порт приложения
•	Далее получаем данные при помощи команды

curl localhost:21122/monitoring/infrastructure/using/summary/1
•	Если там большой объем непонятного текста - вы на верном пути
•	И в конце передаем весь этот текст в нашу программу через перенаправление вывода
(предварительно объявив  в ней метод для получения данных из потока ввода input, иначе произойдет ошибка)

curl localhost:21122/monitoring/infrastructure/using/summary/1 | python3 main.py
•	Путем изменения числа в конце запроса можно получать разные данные и тестировать свою программу
на разных входных данных. Если же не менять число, то вам всегда будут поступать одни и те же данные на вход.









У CTO появилось подозрения, что некоторые услуги и сервисы уже не используются командами.
Проблема заключается в том, что модуль мониторинга используемых услуг не обновлялся последние десять лет:
он не может выгрузить агрегированные данные, да и формат возвращаемых значений не соответствует общепринятым стандартам.
Вы были избраны, чтобы извлечь снятые показатели, агрегировать их по типу и команде и предоставить данную информацию
CTO для первоначальной оценки масштабов проблемы.
Вам на вход будут подаваться данные вида:

Название команды|(Ресурс,Измерение ресурса,Дата и время сбора статистики,Загрузка ресурса);
(Ресурс,Измерение ресурса,Дата сбора статистики,Загрузка ресурса)$Название команды|
(Ресурс,Измерение ресурса,Дата сбора статистики,Загрузка ресурса);
(Ресурс,Измерение ресурса,Дата сбора статистики,Загрузка ресурса)

Команды и описание их ресурсов отделяются при помощи разделителя "$"
Название команды от ресурсов команды отделяется при помощи разделителя "|"
Ресурсов команды перечислены в круглых скобках и отделяются при помощи разделителя ";"
•	Первый элемент в скобках - ID ресурса
•	Второй элемент в скобках - Измерение ресурса (CPU, RAM или NetFlow)
•	Третий элемент в скобках - Дата и время сбора статистики
•	Четвертый элемент в скобках - Загрузка ресурса в процентах (от 0 до 100)
Требуется произвести парсинг данной последовательности
Далее нужно составить словарь с аналитикой использования ресурсов следующего вида:
{'Название команды':
    {'Название ресурса':
        {'Измерение ресурса':
            {'Среднее измерения': 51.645,
            'Медиана измерения': 53.0,
            'Тип использования': 'Stable',
            'Интенсивность использования': 'Medium'}}},
'envisioneer rich mindshare':
    {'SZY1417':
        {'CPU':
            {'mean': 51.645,
            'mediana': 53.0,
            'usage_type': 'Stable',
            'intensivity': 'Medium'}}},
...
}

usage_type - тип нагрузки: скачки, стабильная, и снижения.
•	Если среднее загрузки ресурса по измерению (CPU/RAM/NetFlow) составляет менее 75% от медианы, тип нагрузки: снижения
•	Если среднее составляет более 125% от медианы, тип нагрузки: скачки
•	Если среднее между 75% и 125% от медианы включительно, типа нагрузки: стабильная

intensivity - интенсивность использования: низкая, умеренная, высокая, запредельная
•	Если медиана загрузки ресурса по измерению больше нуля и меньше или равна 30, то интенсивность низкая.
•	Если медиана загрузки ресурса по измерению больше 30 и меньше или равна 60, то интенсивность умеренная.
•	Если медиана загрузки ресурса по измерению больше 60 и меньше или равна 90, то интенсивность высокая.
•	Если медиана загрузки ресурса по измерению больше 90, то интенсивность запредельная.

Таким образом получаются следующие состояния:
•	Ресурс используется с низкой интенсивностью и тип загрузки - снижения. От такого ресурса нужно отказаться.
•	Ресурс используется с низкой интенсивностью и тип загрузки - стабильная. От такого ресурса нужно отказаться.
•	Ресурс используется с низкой интенсивностью и тип загрузки - скачки. От такого ресурса нужно отказаться.
•	Ресурс используется с умеренной интенсивностью и тип загрузки - снижения. От такого ресурса нужно отказаться.
•	Ресурс используется с умеренной интенсивностью и тип загрузки - стабильная. Такой ресурс остается у команды в неизменном виде.
•	Ресурс используется с умеренной интенсивностью и тип загрузки - скачки. Такой ресурс остается у команды в неизменном виде.
•	Ресурс используется с высокой интенсивностью и тип загрузки - снижения. Такой ресурс остается у команды в неизменном виде.
•	Ресурс используется с высокой интенсивностью и тип загрузки - стабильная. Такой ресурс остается у команды в неизменном виде.
•	Ресурс используется с высокой интенсивностью и тип загрузки - скачки. Такой ресурс остается у команды и его необходимо усилить.
•	Ресурс используется с запредельной интенсивностью и тип загрузки - снижения. Такой ресурс остается у команды и его необходимо усилить
•	Ресурс используется с запредельной интенсивностью и тип загрузки - стабильная. Такой ресурс остается у команды и его необходимо усилить
•	Ресурс используется с запредельной интенсивностью и тип загрузки - скачки. Такой ресурс остается у команды и его необходимо усилить.

Также помимо словаря, нужно создать текстовый отчет по каждой команде,
в котором нужно отобразить использование их ресурсов.
Например по каждой команде может быть создана таблица (данные в таблице рандомные, и не соответствуют условиям задания):
|Resource|Dimension|mean |mediana|usage_type|intensivity|decision       |
|APT-323 |CPU      |56   |47.0   |Stable    |Low        |delete resource|
|APT-323 |RAM      |74   |43.0   |Stable    |Medium     |normal using   |
|DHH-HW1 |RAM      |52.56|55.5   |Stable    |Extreme    |extend resource|
Никаких ограничений при выполнении задания нет. Вы может использовать любые структуры, модули и любую парадигму.
Любой формат отчета (только текст, markdown, LaTeX, и т.д.).
Вы можете даже рассчитать какой-нибудь свой показатель. Единственное, что важно: код должен быть написан на Python :)
